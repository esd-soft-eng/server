/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package softkeypad;

import java.util.ArrayList;
import javax.swing.JButton;

/**
 *
 * @author neil
 */
public class KeyPad extends javax.swing.JFrame {

    /**
     * Creates new form KeyPad
     */
    public KeyPad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kp1 = new javax.swing.JButton();
        kp2 = new javax.swing.JButton();
        kp3 = new javax.swing.JButton();
        kp4 = new javax.swing.JButton();
        kp5 = new javax.swing.JButton();
        kp6 = new javax.swing.JButton();
        kp7 = new javax.swing.JButton();
        kp8 = new javax.swing.JButton();
        kp9 = new javax.swing.JButton();
        kp0 = new javax.swing.JButton();
        kpStar = new javax.swing.JButton();
        kpHash = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kp1.setText("1");
        kp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 50, 50));

        kp2.setText("2");
        kp2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 50, 50));

        kp3.setText("3");
        kp3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 50, 50));

        kp4.setText("4");
        kp4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 50, 50));

        kp5.setText("5");
        kp5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 50, 50));

        kp6.setText("6");
        kp6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 50, 50));

        kp7.setText("7");
        kp7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 50, 50));

        kp8.setText("8");
        kp8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 50, 50));

        kp9.setText("9");
        kp9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 50, 50));

        kp0.setText("0");
        kp0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kp0, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 50, 50));

        kpStar.setText("*");
        kpStar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kpStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 50, 50));

        kpHash.setText("#");
        kpHash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyClicked(evt);
            }
        });
        getContentPane().add(kpHash, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 50, 50));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        output.setColumns(20);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 150, 100));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keyClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_keyClicked

        JButton button = (JButton) evt.getComponent();
        this.manageInput(button.getText());
    }//GEN-LAST:event_keyClicked
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kp0;
    private javax.swing.JButton kp1;
    private javax.swing.JButton kp2;
    private javax.swing.JButton kp3;
    private javax.swing.JButton kp4;
    private javax.swing.JButton kp5;
    private javax.swing.JButton kp6;
    private javax.swing.JButton kp7;
    private javax.swing.JButton kp8;
    private javax.swing.JButton kp9;
    private javax.swing.JButton kpHash;
    private javax.swing.JButton kpStar;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
    private MuseumServerComms comms;
    private StringBuilder input;
    private String pin;
    private boolean loggedIn;
    private ArrayList<String> exhibits;

    public void initKeyPad(MuseumServerComms comms) {
        this.comms = comms;
        this.input = new StringBuilder();
        this.loggedIn = false;
        this.exhibits = new ArrayList();
    }

    private void manageInput(String text) {

        switch (text) {
            case "#":
                this.output.setText(this.processHash());
                break;
            case "*":
                this.output.setText(this.processStar());
                break;
            default:
                input.append(text);
                output.setText(input.toString());
                break;
        }
    }

    private String processHash() {

        if (loggedIn) {
            return processAudioRequest(input.toString());
        } else {
            return processLogin(input.toString());
        }
    }

    private String processLogin(String input) {

        if (this.input.length() == 0) {
            return "Enter your pin\nand press #";
        }

        String exList = this.comms.logHandset(input);

        exList = exList.replace("[", "");
        exList = exList.replace("]", "");

        if (exList.length() > 0) {
            String[] ex = exList.split(",");
            for (String s : ex) {
                this.pin = input;
                this.exhibits.add(s);
                this.loggedIn = true;
                this.input.delete(0, input.length());
            }
            return this.getExhibitsList();
        }
        this.input.delete(0, input.length());
        return "Unknown pin";
    }

    private String getExhibitsList() {

        String result = "Your Exhibits\n:";
        for (String s : this.exhibits) {
            result += " " + s + ",";
        }
        return result;
    }

    private String processAudioRequest(String input) {

        if (this.input.length() == 0) {
            return this.getExhibitsList();
        }

        this.input.delete(0, input.length());
        if (this.exhibits.contains(input)) {
            this.comms.requestAudio(this.pin, input);
            return "Attempting to play\n:" + input + "\n" + this.getExhibitsList();
        }

        return "Exhibit " + input + " not on\nTour!\n" + this.getExhibitsList();
    }

    private String processStar() {

        
        if (!this.loggedIn) {
            input.delete(0, input.length());
            return "Enter your pin and\npress # to log in";
        }

        if (input.length() > 0) {
            input.delete(0, input.length());
            return "* again to log out";
        }
        this.exhibits.clear();
        this.loggedIn = false;
        return "You are now logged \nout!";
    }
}
